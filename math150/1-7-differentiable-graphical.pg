##DESCRIPTION
##  Description of problem goes here
##ENDDESCRIPTION

##KEYWORDS('keyword')

## DBsubject('')
## DBchapter('')
## DBsection('')
## Date('1/1/2016')
## Author('')
## Institution('')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('1.1')
## Problem1('1')

########################################################################

DOCUMENT();      
loadMacros("PGstandard.pl","MathObjects.pl","PGML.pl","PGgraphmacros.pl","PGcourse.pl","PGchoicemacros.pl","PGgraders.pl");
TEXT(beginproblem()); # Print problem number and point value
$showPartialCorrectAnswers = 1; # Show which answers are correct or incorrect

$pt1 = random(-3,-2,1);
$pt2 = random($pt1+1,-1,1);
$pt3 = 0;
$pt4 = random(1,2,1);
$pt5 = random($pt4+1,3,1);

@graphs = ();

@values = ();
@pts = (-4,$pt1,$pt2,$pt3,$pt4,$pt5,4);

$a = shift(@pts);
$start_mark = "<";
$end_mark = "";
$start_deriv = random(-3, 3, 1);
$start_val = random(-5, 5, 1);
$fn_names = "";
$diff = 1;
$had_a_discontinuity = 0;
$min = $start_val;
$max = $start_val;
$first = 1;
while(@pts) {
  $b = shift(@pts);

  $end_deriv = $start_deriv;
  while($end_deriv == $start_deriv) {
    $end_deriv = random(-3, 3, 1);
  }

  # Choose the function; quadratic for now
  $m = ($end_deriv - $start_deriv) / ($b - $a);
  $cts = random(0,3,1);
  $const = $start_val - $start_deriv * $a;
  if($cts == 0 && $first == 0) {
    if($had_a_discontinuity == 1) {
      # No more than one discontinuity
      $cts = 1;
    } else {
      # Not continuous
      $had_a_discontinuity = 1;
      while($const == $start_val - $start_deriv * $a) {
        $const = random(-3,3,1);
      }
    }
  }
  $fn = "${m} * (x - ${a})^2 / 2 + ${start_deriv} * x + ${const}";
  # $fn_names = "$fn_names $PAR $fn with start_deriv = ${start_deriv} and start_val = ${start_val} and a = ${a} and const = ${const}";

  $f = Compute($fn);

  # Check both the start and end of this interval, since there may be discontinuities
  $end_val = $f->eval(x => $a);
  $min = min($min, $end_val);
  $max = max($max, $end_val);

  $start_val = $f->eval(x => $b);
  $min = min($min, $start_val);
  $max = max($max, $start_val);

  $rel_ext_at = $a - $start_deriv / $m;
  if($a < $rel_ext_at && $rel_ext_at < $b) {
    $rel_ext = $f->eval(x => $rel_ext_at);
    $min = min($min, $rel_ext);
    $max = max($max, $rel_ext);
  }

  push(@graphs, "${fn} for x in <${a},${b}> using color:blue");

  if($cts == 0) {
    push(@values,"Neither");
  } elsif($diff == 0) {
    push(@values,"OnlyCont");
  } else {
    push(@values,"Both");
  }

  # Choose how the *next* boundary point will behave.
  $diff = random(0,1,1);
  if($diff == 1) {
    # differentiable
    $start_deriv = $end_deriv;
  } else {
    # not differentiable
    $start_deriv = $end_deriv;
    while($start_deriv == $end_deriv) {
      if($end_deriv >= 2) {
        $start_deriv = random(-3,0,1);
      } elsif($end_deriv <= -2) {
        $start_deriv = random(0,3,1);
      } else {
        $start_deriv = random(2,4,1) * non_zero_random(-1,1,1);
      }
    }
  }

  $a = $b;
  $first = 0;
}

$gr = init_graph(-4, floor($min - 0.1), 4, ceil($max + 0.1),
                 axes=>[0,0],
                 grid=>[8],
                 size=>[400,400]
                );

foreach $graph (@graphs) {
  add_functions($gr, $graph);
}

($throwaway, $ans1, $ans2, $ans3, $ans4, $ans5) = @values;

$popups = new_select_list();
$popups->rf_print_q(~~&quest_first_pop_up_list_print_q);
$popups->ra_pop_up_list
  ([ No_answer => "?",
     "Both" => "Both continuous and differentiable",
     "OnlyCont" => "Continuous but not differentiable",
     "OnlyDiff" => "Differentiable but not continuous",
     "Neither" => "Neither continuous nor differentiable",
   ]);

$popups->qa
  ("At x = $pt1, is this function ", $ans1,
   "At x = $pt2, is this function ", $ans2,
   "At x = $pt3, is this function ", $ans3,
   "At x = $pt4, is this function ", $ans4,
   "At x = $pt5, is this function ", $ans5);

$popups->choose(5);

BEGIN_TEXT
Here is the graph of a function \(f\).

$BCENTER
\{ image( insertGraph($gr), 
width=>500,height=>500,tex_size=>800 ) \}
$ECENTER

$PAR

Select the correct behavior of the function at each specified point.

\{ $popups->print_q \}

END_TEXT


install_problem_grader(~~&custom_problem_grader_fluid);
$ENV{'grader_numright'} = [1,2,3,4,5];
$ENV{'grader_scores'} = [0.2,0.4,0.6,0.8,1];

$showPartialCorrectAnswers = 0;

ANS(str_cmp($popups->ra_correct_ans));

ENDDOCUMENT();
