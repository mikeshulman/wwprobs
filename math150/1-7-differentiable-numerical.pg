## DESCRIPTION
## Calculus
## ENDDESCRIPTION

## Tagged by cmd6a 4/20/06

## DBsubject(Calculus - single variable)
## DBchapter(Differentiation)
## DBsection(Definition of the derivative)
## MLT(defDerBox)
## MLTleader(1)
## MO(1)
## Level(3)
## KEYWORDS('Calculus','Derivatives')

&DOCUMENT();

loadMacros(
  "PGstandard.pl",
#  "PGchoicemacros.pl",
  "MathObjects.pl",
  "PGnumericalmacros.pl",
  "PGcourse.pl",
  "PGchoicemacros.pl","PGgraders.pl"
);

Context("Numeric"); 
Context()->{format}{number} = "%.14g";

sub make_spline {
  ($f, $name) = @_;
  #  Calculate the cubic spline approximation
  $llimit = -5; $rlimit = 5;
  my $num_of_intervals = 500;  # number of interpolation points
  my $delta =  ($rlimit-$llimit)/($num_of_intervals); 
  my (@x_values, @y_values);
  foreach my $i (0..$num_of_intervals) {
    my $x = $llimit + $delta*$i;
    my $y = &$f($x);
    push(@x_values, $x); push(@y_values,$y);
  }
  ($t_ref, $a_ref, $b_ref, $c_ref, $d_ref) = create_cubic_spline (~~@x_values, ~~@y_values);
  $f_approx = cubic_spline(~~@x_values, ~~@y_values);
  $js_text = javaScript_cubic_spline(~~@x_values,~~@y_values, name => $name, llimit => $llimit, rlimit => $rlimit);
  #return [$f_approx, $js_text];
  return $js_text;
}

$pt1 = random(-3,-2,1);
$pt2 = random($pt1+1,-1,1);
$pt3 = 0;
$pt4 = random(1,2,1);
$pt5 = random($pt4+1,3,1);

@splines = ();
$jsfn = "";
@values = ();
@pts = (-4,$pt1,$pt2,$pt3,$pt4,$pt5,4);

$a = shift(@pts);
$start_deriv = random(-3, 3, 1);
$start_val = random(-5, 5, 1);
$diff = 1;
$had_a_discontinuity = 0;
$min = $start_val;
$max = $start_val;
$ix = 0;
while(@pts) {
  $b = shift(@pts);

  $end_deriv = $start_deriv;
  while($end_deriv == $start_deriv) {
    $end_deriv = random(-3, 3, 1);
  }

  # Choose the function; quadratic for now
  $m = ($end_deriv - $start_deriv) / ($b - $a);
  $cts = random(0,3,1);
  $const = $start_val - $start_deriv * $a;
  if($cts == 0) {
    if($had_a_discontinuity == 1) {
      # No more than one discontinuity
      $cts = 1;
    } else {
      # Not continuous
      $had_a_discontinuity = 1;
      while($const == $start_val - $start_deriv * $a) {
        $const = random(-3,3,1);
      }
    }
  }
  $f = sub {
    my $x = shift;
    return $m * ($x - $a) * ($x - $a) / 2 + $start_deriv * $x + $const;
  };

  # Check both the start and end of this interval, since there may be discontinuities
  $end_val = &$f($a);
  $min = min($min, $end_val);
  $max = max($max, $end_val);

  $start_val = &$f($b);
  $min = min($min, $start_val);
  $max = max($max, $start_val);

  $rel_ext_at = $start_deriv / $m - $a;
  if($a < $rel_ext_at && $rel_ext_at < $b) {
    $rel_ext = &$f($rel_ext_at);
    $min = min($min, $rel_ext);
    $max = max($max, $rel_ext);
  }

  push(@splines, make_spline($f, "func${ix}"));
  $jsfn .= <<END;
if( x < $b ) {
  return func${ix}(x)
} else 
END

  if($cts == 0) {
    push(@values,"Neither");
  } elsif($diff == 0) {
    push(@values,"OnlyCont");
  } else {
    push(@values,"Both");
  }

  # Choose how the *next* boundary point will behave.
  $diff = random(0,1,1);
  if($diff == 1) {
    # differentiable
    $start_deriv = $end_deriv;
  } else {
    # not differentiable
    $start_deriv = $end_deriv;
    while($start_deriv == $end_deriv) {
      if($end_deriv >= 2) {
        $start_deriv = random(-3,0,1);
      } elsif($end_deriv <= -2) {
        $start_deriv = random(0,3,1);
      } else {
        $start_deriv = random(2,4,1) * non_zero_random(-1,1,1);
      }
    }
  }

  $a = $b;
  $ix++;
}

($throwaway, $ans1, $ans2, $ans3, $ans4, $ans5) = @values;

$popups = new_select_list();
$popups->rf_print_q(~~&quest_first_pop_up_list_print_q);
$popups->ra_pop_up_list
  ([ No_answer => "?",
     "Both" => "Both continuous and differentiable",
     "OnlyCont" => "Continuous but not differentiable",
     "OnlyDiff" => "Differentiable but not continuous",
     "Neither" => "Neither continuous nor differentiable",
   ]);

$popups->qa
  ("At x = $pt1, is this function ", $ans1,
   "At x = $pt2, is this function ", $ans2,
   "At x = $pt3, is this function ", $ans3,
   "At x = $pt4, is this function ", $ans4,
   "At x = $pt5, is this function ", $ans5);

$popups->choose(3);

HEADER_TEXT($splines[0]);
HEADER_TEXT($splines[1]);
HEADER_TEXT($splines[2]);
HEADER_TEXT($splines[3]);
HEADER_TEXT($splines[4]);
HEADER_TEXT($splines[5]);

# open window to calculator
HEADER_TEXT(<<EOF);
  <script type="text/javascript" language="javascript">
  <!-- //
  function windowpopup() {
    var url = "https://www.desmos.com/fourfunction";
    var opt = "height=625,width=600,location=no,menubar=no," +
              "status=no,resizable=yes,scrollbars=yes," +
              "toolbar=no,";
    window.open(url,'newwindow',opt).focus();
  }
  // -->
  </script>
EOF

TEXT(beginproblem());

Context()->texStrings;
# A warning that we are using javaScript
TEXT(M3("",
"\begin{rawhtml}
<NOSCRIPT> This problem requires that Java Script be enabled </NOSCRIPT> \end{rawhtml}
",
"<NOSCRIPT> This problem requires that Java Script be enabled </NOSCRIPT>"
));

BEGIN_TEXT
Below is an "oracle" function. An oracle function is a function presented interactively. 
When you type in a \(t\) value, and press the --f--\(>\) button  
the value \(f(t)\) appears in the right hand window.  There are three lines, 
so you can calculate
three different values of the function at one time. 

$PAR
Select the correct behavior of the function at each specified point.  You may use a
\{ htmlLink( "javascript:windowpopup();", "calculator" ) \}.
$PAR

\{ $popups->print_q \}

END_TEXT

Context()->normalStrings;

HEADER_TEXT(<<EOF);
<SCRIPT LANGUAGE="JavaScript">
<!-- Begin
function func(x) {
  $jsfn {
    return 0
  }
}
-->
</SCRIPT>

EOF


$javaScript =<<ENDOFSCRIPT;
<CENTER>
<TABLE BORDER=4>
<TR>
<TH>t</TH><TH></TH><TH>f(t)</TH>
<TR>
<TD>
<INPUT TYPE="text"   NAME="Input"  Value = "$x0" Size="16">
</TD>
<TD>
<INPUT TYPE="button" VALUE="---f-->"  
            OnClick="this.form.Output.value=func(this.form.Input.value);">
</TD>
<TD>
<INPUT TYPE="text"   NAME="Output"   Size="30">
</TD>

</TR>

<TR>
<TD>
<INPUT TYPE="text"   NAME="Input2"  Value = "$x0" Size="16">
</TD>

<TD>
<INPUT TYPE="button" VALUE="---f-->"  
            OnClick="this.form.Output2.value=func(this.form.Input2.value);">
</TD>
<TD>
<INPUT TYPE="text"   NAME="Output2"   Size="30">
</TD>
</TR>

<TR>
<TD>
<INPUT TYPE="text"   NAME="Input3"  Value = "$x0" Size="16">
</TD>
<TD>
<INPUT TYPE="button" VALUE="---f-->"  
            OnClick="this.form.Output3.value=func(this.form.Input3.value);">
</TD>
<TD>
<INPUT TYPE="text"   NAME="Output3"   Size="30">
</TD>
</TR>
</TABLE>

</CENTER>
<!-- Script Size:  1.89 KB  -->
ENDOFSCRIPT

TEXT(M3(
     " \fbox{ The java Script calculator was displayed here
             }",
     "\begin{rawhtml} $javaScript \end{rawhtml}",
      $javaScript
      ));

Context()->texStrings;

Context()->normalStrings;

install_problem_grader(~~&custom_problem_grader_fluid);
$ENV{'grader_numright'} = [1,2,3];
$ENV{'grader_scores'} = [0.34,0.67,1];

$showPartialCorrectAnswers = 0;

ANS(str_cmp($popups->ra_correct_ans));

ENDDOCUMENT();

