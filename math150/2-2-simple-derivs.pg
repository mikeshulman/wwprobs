##DESCRIPTION
##  Description of problem goes here
##ENDDESCRIPTION

##KEYWORDS('keyword')

## DBsubject('')
## DBchapter('')
## DBsection('')
## Date('1/1/2016')
## Author('')
## Institution('')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('1.1')
## Problem1('1')

########################################################################

DOCUMENT();      
loadMacros("PGstandard.pl","MathObjects.pl","PGML.pl","PGcourse.pl","PGessaymacros.pl","contextFraction.pl");
TEXT(beginproblem()); # Print problem number and point value
$showPartialCorrectAnswers = 1; # Show which answers are correct or incorrect

Context("Fraction");            # Setting reduceConstants=>0 and not reduce()ing is another option
Context()->variables->add(y => "Real");
Context()->flags->set(limits=>[2,5]);

sub make_term {
  my $type = random(0,10,1);
  if($type <= 2) {
    my $exponent = non_zero_random(-2,7,1);
    $f = Compute("x^$exponent");
  } elsif($type <= 3) {
    $f = Compute("sqrt(x)");
  } elsif($type <= 4) {
    my $exponent = Fraction(1,random(3,7,1));
    $f = Compute("x^y")->substitute(y => $exponent);
  } elsif($type <= 5) {
    $f = Compute("e^x");
  } elsif($type <= 6) {
    my $base = random(2,8,1);
    $f = Compute("$base^x");
  } elsif($type <= 7) {
    $f = Compute("sin(x)");
  } elsif($type <= 8) {
    $f = Compute("cos(x)");
  } else {
    $f = non_zero_random(-15,15,1);
  }
  my $coefftype = random(1,5,1);
  my $coeff = 1;
  if($coefftype <= 3) {
    $coeff = non_zero_random(-9,9,1);
  }
  return $coeff * $f;
}

sub make_func {
  my $terms = shift;
  if($terms <= 1) {
    return make_term();
  }
  return make_term() + make_func($terms - 1);
}

$f = make_func(random(1,4,1));
$f = $f->reduce();
$df = $f->D('x')->reduce();

BEGIN_PGML
Find the derivative of the function [```f(x) = [$f]```]

[`f'(x) = `] [_______________________________________]{$df}
END_PGML

ENDDOCUMENT();
